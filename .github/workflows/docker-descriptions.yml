name: Update DockerHub Repository Description

on:
  pull_request:
    types: [opened, reopened, synchronize]
#   push:
#     branches: [ main, master ]
#     paths:
#       - 'DESCRIPTION.md'  # Only run when this file changes
  workflow_dispatch:      # Allow manual triggering

jobs:
  update-description:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Read description from file
        id: read_description
        run: |
          # Read the content of bwa/DESCRIPTION.md and escape it properly for JSON
          DESCRIPTION=$(cat bwa/DESCRIPTION.md)
          # Store the description in a file for proper handling
          echo "$DESCRIPTION" > description_content.txt
          echo "Description file created successfully"
      
      - name: Login to DockerHub
        id: login
        run: |
          RESPONSE=$(curl -s -H "Content-Type: application/json" -X POST \
            -d "{\"username\": \"${{ secrets.DOCKERHUB_USER }}\", \"password\": \"${{ secrets.DOCKERHUB_PW }}\"}" \
            https://hub.docker.com/v2/users/login/)
          
          TOKEN=$(echo $RESPONSE | jq -r '.token')
          
          if [ -z "$TOKEN" ] || [ "$TOKEN" == "null" ]; then
            echo "Failed to get DockerHub token. Check your credentials."
            echo "Response was: $RESPONSE"
            exit 1
          fi
          
          echo "token=$TOKEN" >> $GITHUB_OUTPUT
          echo "Successfully logged in to DockerHub"
      
      - name: Update DockerHub Repository Description
        run: |
          # Create JSON payload file to avoid shell escaping issues
          jq -n --rawfile desc description_content.txt '{full_description: $desc}' > payload.json
          
          # Check the content of the payload
          echo "Payload content (first 100 chars):"
          head -c 100 payload.json
          
          # Use the payload file with curl
          RESPONSE=$(curl -s -H "Content-Type: application/json" \
            -H "Authorization: JWT ${{ steps.login.outputs.token }}" \
            -X PATCH \
            --data @payload.json \
            https://hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USER }}/bwa/)
          
          echo "Response from DockerHub API: $RESPONSE"
          echo "DockerHub repository description updated successfully!"
