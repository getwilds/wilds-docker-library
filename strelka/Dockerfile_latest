# Strelka Dockerfile for WILDS Docker Library
# Strelka: small variant caller for germline and somatic variant calling
FROM ubuntu:22.04

# Adding labels for the GitHub Container Registry following WILDS standards
LABEL org.opencontainers.image.title="strelka"
LABEL org.opencontainers.image.description="Container image for Strelka variant caller in WILDS"
LABEL org.opencontainers.image.version="latest"
LABEL org.opencontainers.image.authors="wilds@fredhutch.org"
LABEL org.opencontainers.image.url=https://ocdo.fredhutch.org/
LABEL org.opencontainers.image.documentation=https://getwilds.org/
LABEL org.opencontainers.image.source=https://github.com/getwilds/wilds-docker-library
LABEL org.opencontainers.image.licenses=MIT

# Set the shell option to fail if any command in a pipe fails
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Set environment variables for non-interactive installation
ENV DEBIAN_FRONTEND=noninteractive

# Update package list and install system dependencies
RUN apt-get update \
  && WGET_VERSION=$(apt-cache policy wget | grep Candidate | awk '{print $2}') \
  && CURL_VERSION=$(apt-cache policy curl | grep Candidate | awk '{print $2}') \
  && BZIP2_VERSION=$(apt-cache policy bzip2 | grep Candidate | awk '{print $2}') \
  && CACERT_VERSION=$(apt-cache policy ca-certificates | grep Candidate | awk '{print $2}') \
  && BUILD_ESSENTIAL_VERSION=$(apt-cache policy build-essential | grep Candidate | awk '{print $2}') \
  && ZLIB_VERSION=$(apt-cache policy zlib1g-dev | grep Candidate | awk '{print $2}') \
  && LIBBZ2_VERSION=$(apt-cache policy libbz2-dev | grep Candidate | awk '{print $2}') \
  && LIBLZMA_VERSION=$(apt-cache policy liblzma-dev | grep Candidate | awk '{print $2}') \
  && LIBSSL_VERSION=$(apt-cache policy libssl-dev | grep Candidate | awk '{print $2}') \
  && LIBCURL_VERSION=$(apt-cache policy libcurl4-openssl-dev | grep Candidate | awk '{print $2}') \
  && LIBNCURSES_VERSION=$(apt-cache policy libncurses-dev | grep Candidate | awk '{print $2}') \
  && CMAKE_VERSION=$(apt-cache policy cmake | grep Candidate | awk '{print $2}') \
  && PYTHON2_VERSION=$(apt-cache policy python2 | grep Candidate | awk '{print $2}') \
  && PYTHON3_VERSION=$(apt-cache policy python3 | grep Candidate | awk '{print $2}') \
  && PYTHON3_DEV_VERSION=$(apt-cache policy python3-dev | grep Candidate | awk '{print $2}') \
  && GIT_VERSION=$(apt-cache policy git | grep Candidate | awk '{print $2}') \
  && apt-get install -y --no-install-recommends \
  wget="${WGET_VERSION}" \
  curl="${CURL_VERSION}" \
  bzip2="${BZIP2_VERSION}" \
  ca-certificates="${CACERT_VERSION}" \
  build-essential="${BUILD_ESSENTIAL_VERSION}" \
  zlib1g-dev="${ZLIB_VERSION}" \
  libbz2-dev="${LIBBZ2_VERSION}" \
  liblzma-dev="${LIBLZMA_VERSION}" \
  libssl-dev="${LIBSSL_VERSION}" \
  libcurl4-openssl-dev="${LIBCURL_VERSION}" \
  libncurses-dev="${LIBNCURSES_VERSION}" \
  cmake="${CMAKE_VERSION}" \
  python2="${PYTHON2_VERSION}" \
  python3="${PYTHON3_VERSION}" \
  python3-dev="${PYTHON3_DEV_VERSION}" \
  git="${GIT_VERSION}" \
  && rm -rf /var/lib/apt/lists/*

# Create working directory
WORKDIR /tmp

# Install htslib (required dependency for Strelka)
ENV HTSLIB_VERSION=1.19.1
RUN wget --progress=dot:giga https://github.com/samtools/htslib/releases/download/${HTSLIB_VERSION}/htslib-${HTSLIB_VERSION}.tar.bz2 \
  && tar -xjf htslib-${HTSLIB_VERSION}.tar.bz2
WORKDIR /tmp/htslib-${HTSLIB_VERSION}
RUN ./configure --prefix=/usr/local \
  && make \
  && make install
WORKDIR /tmp
RUN rm -rf htslib-${HTSLIB_VERSION}*

# Install samtools (often used with Strelka)
ENV SAMTOOLS_VERSION=1.19.2
RUN wget --progress=dot:giga https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2 \
  && tar -xjf samtools-${SAMTOOLS_VERSION}.tar.bz2
WORKDIR /tmp/samtools-${SAMTOOLS_VERSION}
RUN ./configure --prefix=/usr/local \
  && make \
  && make install
WORKDIR /tmp
RUN rm -rf samtools-${SAMTOOLS_VERSION}*

# Install bcftools (for VCF manipulation)
ENV BCFTOOLS_VERSION=1.19
RUN wget --progress=dot:giga https://github.com/samtools/bcftools/releases/download/${BCFTOOLS_VERSION}/bcftools-${BCFTOOLS_VERSION}.tar.bz2 \
  && tar -xjf bcftools-${BCFTOOLS_VERSION}.tar.bz2
WORKDIR /tmp/bcftools-${BCFTOOLS_VERSION}
RUN ./configure --prefix=/usr/local \
  && make \
  && make install
WORKDIR /tmp
RUN rm -rf bcftools-${BCFTOOLS_VERSION}*

# Install Strelka2
ENV STRELKA_VERSION=2.9.10
RUN wget --progress=dot:giga https://github.com/Illumina/strelka/releases/download/v${STRELKA_VERSION}/strelka-${STRELKA_VERSION}.centos6_x86_64.tar.bz2 \
  && tar -xjf strelka-${STRELKA_VERSION}.centos6_x86_64.tar.bz2 \
  && cp -r strelka-${STRELKA_VERSION}.centos6_x86_64/* /usr/local/ \
  && rm -rf strelka-${STRELKA_VERSION}*

# Add Strelka binaries to PATH
ENV PATH="/usr/local/bin:${PATH}"

# Clean up
RUN apt-get clean \
  && rm -rf /var/lib/apt/lists/* \
  && rm -rf /tmp/*

# Smoke test to verify Strelka binaries work on target architecture
RUN configureStrelkaGermlineWorkflow.py --version && \
    samtools --version && \
    bcftools --version
