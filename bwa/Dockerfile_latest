# Use specific SHA for better reproducibility
FROM ubuntu:noble-20241011@sha256:e6173d4dc55e76b87c4af8db8821b1feae4146dd47341e4d431118c7dd060a74

# Adding labels for the GitHub Container Registry
LABEL org.opencontainers.image.title="bwa" \
      org.opencontainers.image.description="Docker image for the use of bwa in FH DaSL's WILDS" \
      org.opencontainers.image.version="latest" \
      org.opencontainers.image.authors="wilds@fredhutch.org" \
      org.opencontainers.image.url=https://hutchdatascience.org/ \
      org.opencontainers.image.documentation=https://getwilds.org/ \
      org.opencontainers.image.source=https://github.com/getwilds/wilds-docker-library \
      org.opencontainers.image.licenses=MIT

# Set environment variables for versions
ENV BWA_VERSION=0.7.17 \
    SAMTOOLS_VERSION=1.11

# Set shell options
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Update system and install security patches
RUN apt-get update && \
    apt-get upgrade -y && \
    # Store current versions in variables
    BUILD_ESSENTIAL_VERSION=$(apt-cache policy build-essential | grep Candidate | awk '{print $2}') && \
    WGET_VERSION=$(apt-cache policy wget | grep Candidate | awk '{print $2}') && \
    ZLIB_VERSION=$(apt-cache policy zlib1g-dev | grep Candidate | awk '{print $2}') && \
    AUTOCONF_VERSION=$(apt-cache policy autoconf | grep Candidate | awk '{print $2}') && \
    AUTOMAKE_VERSION=$(apt-cache policy automake | grep Candidate | awk '{print $2}') && \
    LIBNCURSES_VERSION=$(apt-cache policy libncurses-dev | grep Candidate | awk '{print $2}') && \
    LIBBZ2_VERSION=$(apt-cache policy libbz2-dev | grep Candidate | awk '{print $2}') && \
    LIBLZMA_VERSION=$(apt-cache policy liblzma-dev | grep Candidate | awk '{print $2}') && \
    LIBSSL_VERSION=$(apt-cache policy libssl-dev | grep Candidate | awk '{print $2}') && \
    LIBCURL_VERSION=$(apt-cache policy libcurl4-gnutls-dev | grep Candidate | awk '{print $2}') && \
    GNUTLS_VERSION=$(apt-cache policy gnutls-bin | grep Candidate | awk '{print $2}') && \
    CA_CERTS_VERSION=$(apt-cache policy ca-certificates | grep Candidate | awk '{print $2}') && \
    # Install packages with specific versions
    apt-get install -y --no-install-recommends \
    build-essential="${BUILD_ESSENTIAL_VERSION}" \
    wget="${WGET_VERSION}" \
    zlib1g-dev="${ZLIB_VERSION}" \
    autoconf="${AUTOCONF_VERSION}" \
    automake="${AUTOMAKE_VERSION}" \
    libncurses-dev="${LIBNCURSES_VERSION}" \
    libbz2-dev="${LIBBZ2_VERSION}" \
    liblzma-dev="${LIBLZMA_VERSION}" \
    libssl-dev="${LIBSSL_VERSION}" \
    libcurl4-gnutls-dev="${LIBCURL_VERSION}" \
    gnutls-bin="${GNUTLS_VERSION}" \
    ca-certificates="${CA_CERTS_VERSION}" \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install BWA
WORKDIR /tmp
RUN wget -q https://github.com/lh3/bwa/releases/download/v${BWA_VERSION}/bwa-${BWA_VERSION}.tar.bz2 && \
    tar -jxf bwa-${BWA_VERSION}.tar.bz2 && \
    rm bwa-${BWA_VERSION}.tar.bz2

WORKDIR /tmp/bwa-${BWA_VERSION}
RUN make CC='gcc -fcommon' && \
    mv bwa /usr/local/bin/ && \
    rm -rf /tmp/bwa-${BWA_VERSION}

# Install Samtools
WORKDIR /tmp
RUN wget -q https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2 && \
    tar -jxf samtools-${SAMTOOLS_VERSION}.tar.bz2 && \
    rm samtools-${SAMTOOLS_VERSION}.tar.bz2

WORKDIR /tmp/samtools-${SAMTOOLS_VERSION}
RUN ./configure && \
    make && \
    make install && \
    rm -rf /tmp/samtools-${SAMTOOLS_VERSION}

# Set working directory to a more appropriate location for workflow execution
WORKDIR /data

# Add healthcheck
HEALTHCHECK CMD bwa 2>&1 | grep -q "Program: bwa" || exit 1